package inputManager;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import taxpayer.Taxpayer;

public class InputManager {
	private ArrayList<String> fileDataList = null;

	private void xmlCleaner(ArrayList<String> fileDataList){
		ArrayList<String> trash = new ArrayList<String>();
		trash.add("");
		trash.add("<Receipts>");
		trash.add("</Receipts>");
		fileDataList.removeAll(trash);
		fileDataList.set(0, fileDataList.get(0).replace("<Name>", "").replace("</Name>", "").trim());
		fileDataList.set(1, fileDataList.get(1).replace("<AFM>", "").replace("</AFM>", "").trim());
		fileDataList.set(2, fileDataList.get(2).replace("<Status>", "").replace("</Status>", "").trim());
		fileDataList.set(3, fileDataList.get(3).replace("<Income>", "").replace("</Income>", "").trim());
		for(int i=4; i<fileDataList.size(); i=i+9){
			fileDataList.set(i, fileDataList.get(i).replace("<ReceiptID>","").replace("</ReceiptID>","").trim());
			fileDataList.set(i+1, fileDataList.get(i+1).replace("<Date>", "").replace("</Date>", "").trim());
			fileDataList.set(i+2, fileDataList.get(i+2).replace("<Kind>", "").replace("</Kind>", "").trim());
			fileDataList.set(i+3, fileDataList.get(i+3).replace("<Amount>", "").replace("</Amount>", "").trim());
			fileDataList.set(i+4, fileDataList.get(i+4).replace("<Company>", "").replace("</Company>", "").trim());
			fileDataList.set(i+5, fileDataList.get(i+5).replace("<Country>", "").replace("</Country>", "").trim());
			fileDataList.set(i+6, fileDataList.get(i+6).replace("<City>", "").replace("</City>", "").trim());
			fileDataList.set(i+7, fileDataList.get(i+7).replace("<Street>", "").replace("</Street>", "").trim());
			fileDataList.set(i+8, fileDataList.get(i+8).replace("<Number>", "").replace("</Number>", "").trim());
		}
	}
	
	public void creatTaxpayerDataListFromXmlFile(String filePath){
		fileDataList = new ArrayList<String>();
		String line;

		try {
            FileReader fileReader = new FileReader(filePath);
            BufferedReader bufferedReader = new BufferedReader(fileReader);
            while((line = bufferedReader.readLine()) != null) {
            	fileDataList.add(line);
            }
            xmlCleaner(fileDataList);
            bufferedReader.close();
        }
        catch(FileNotFoundException ex) {
            System.out.println("Unable to open file '" + filePath + "'");                
        }
        catch(IOException ex) {
            System.out.println("Error reading file '" + filePath + "'");
        }
	}
	
	public void creatTaxpayerDataListFromTextFile(String filePath){
		fileDataList = new ArrayList<String>();
		String temp1[];
        String line = null;

        try {
            FileReader fileReader = new FileReader(filePath);
            BufferedReader bufferedReader = new BufferedReader(fileReader);
            while((line = bufferedReader.readLine()) != null) {
            	temp1 = line.split(":");
            	for(int i = 1; i < temp1.length; i = i + 2){
            		fileDataList.add(temp1[i].trim());
            	}
            }
            bufferedReader.close();
        }
        catch(FileNotFoundException ex) {
            System.out.println("Unable to open file '" + filePath + "'");                
        }
        catch(IOException ex) {
            System.out.println("Error reading file '" + filePath + "'");
        }
	}
	
	public Taxpayer getTaxpayerFromFileDataList(){
		Taxpayer myTaxpayer = new Taxpayer();
		myTaxpayer.initializeTaxpayer(fileDataList);
		return myTaxpayer;
		/*
		String taxpayerCategory = fileDataList.get(2);
		if(taxpayerCategory.equals("Single")){
			return myTaxpayerFactory.createSingleTaxpayer().getInitializedTaxpayer(fileDataList);
		}
		else if(taxpayerCategory.equals("Married Filing Jointly")){
			return myTaxpayerFactory.createMarriedFilingJointlyTaxpayer().getInitializedTaxpayer(fileDataList);
		}
		else if(taxpayerCategory.equals("Married Filing Separately")){
			return myTaxpayerFactory.createMarriedFilingSeparatelyTaxpayer().getInitializedTaxpayer(fileDataList);
		}
		else if(taxpayerCategory.equals("Head Of Household")){
			return myTaxpayerFactory.createHeadOfHouseholdTaxpayer().getInitializedTaxpayer(fileDataList);
		}
		else{
			System.out.println("Can't creat such taxpayer category");
			return myTaxpayerFactory.createHeadOfHouseholdTaxpayer().getInitializedTaxpayer(fileDataList);
		}
		*/
	}
	
	public void printFileDataList(){
		System.out.println(fileDataList);
	}
}
