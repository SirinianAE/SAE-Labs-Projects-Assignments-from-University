package outputManager;

import java.awt.Color;
import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;
import taxpayer.Taxpayer;

public class OutputManager {
	private String domain;
	private ChartCreator chartCreator = new ChartCreator();
	
	public void creatInfoXmlFile(Taxpayer taxp){
		ArrayList<String> myList = new ArrayList<String>();
		String fullDomain = domain + taxp.getAfm() + "_INFO.xml";
		File file = new File(fullDomain);
		//lipi enas elenxos
		myList.add("<Name> " + taxp.getName() + " </Name>");
		myList.add("<AFM> " + taxp.getAfm() + " </AFM>");
		myList.add("<Status> " + taxp.getFamilyStatus() + " </Status>");
		myList.add("<Income> " + taxp.getIncome() + " </Income>");
		myList.add("");
		myList.add("");
		myList.add("<Receipts>");
		myList.add("");
		myList.add("");
		
		for(int i=0; i<taxp.getReceipts().size(); i++){
			myList.add("<ReceiptID> " + taxp.getReceipts().get(i).getReceiptCode() + " </ReceiptID>");
			myList.add("<Date> " + taxp.getReceipts().get(i).getDateOfIssue() + " </Date>");
			myList.add("<Kind> " + taxp.getReceipts().get(i).getCategory() + " </Kind>");
			myList.add("<Amount> " + taxp.getReceipts().get(i).getAmountPaid() + " </Amount>");
			myList.add("<Company> " + taxp.getReceipts().get(i).getSeller().getCompanyName() + " </Company>");
			myList.add("<Country> " + taxp.getReceipts().get(i).getSeller().getCountry() + " </Country>");
			myList.add("<City> " + taxp.getReceipts().get(i).getSeller().getCity() + " </City>");
			myList.add("<Street> " + taxp.getReceipts().get(i).getSeller().getStreet() + " </Street>");
			myList.add("<Number> " + taxp.getReceipts().get(i).getSeller().getStreetNumber() + " </Number>");
			myList.add("");
			myList.add("");
		}
		myList.add("</Receipts>");
		
		try{
			PrintWriter output = new PrintWriter(file);
			for(String myString: myList){
				output.println(myString);
			}
			output.close();
		}catch (IOException ex){
			System.out.printf("ERROR: %s\n", ex);
		}
	}
	
	public void creatLogXmlFile(Taxpayer taxp){
		ArrayList<String> myList = new ArrayList<String>();
		String fullDomain = domain + taxp.getAfm() + "_LOG.xml";
		File file = new File(fullDomain);
		
		myList.add("<Name> "  + taxp.getName() + " </Name>");
		myList.add("<AFM> " + taxp.getAfm() + " </AFM>");
		myList.add("<Income> " + taxp.getIncome() + " </Income>");
		myList.add("<BasicTax> " + taxp.getBasicTax() + " </BasicTax>");
		myList.add("<TaxIncrease> " + taxp.getTaxIncrease() + " </TaxIncrease>");
		myList.add("<TotalTax> " + taxp.getTotalTax() + " </TotalTax>");
		myList.add("<Receipts> " + taxp.getTotalReceiptsGathered() + " </Receipts>");
		myList.add("<Entertainment> " + taxp.getCategoryNumberOfReceipts("Entertainment") + " </Entertainment>");
		myList.add("<Basic> " + taxp.getCategoryNumberOfReceipts("Basic") + " </Basic>");
		myList.add("<Travel> " + taxp.getCategoryNumberOfReceipts("Travel") + " </Travel>");
		myList.add("<Health> " + taxp.getCategoryNumberOfReceipts("Health") + " </Health>");
		myList.add("<Other> " + taxp.getCategoryNumberOfReceipts("Other") + " </Other>");
		
		try{
			PrintWriter output = new PrintWriter(file);
			for(String myString: myList){
				output.println(myString);
			}
			output.close();
		}catch (IOException ex){
			System.out.printf("ERROR: %s\n", ex);
		}
	}
	
	public void creatInfoTextFile(Taxpayer taxp){
		ArrayList<String> myList = new ArrayList<String>();
		String fullDomain = domain + taxp.getAfm() + "_INFO.txt";
		File file = new File(fullDomain);
		//lipi enas elenxos
		myList.add("Name: " + taxp.getName());
		myList.add("AFM: " + taxp.getAfm());
		myList.add("Status: " + taxp.getFamilyStatus());
		myList.add("Income: " + taxp.getIncome());
		myList.add("");
		myList.add("");
		myList.add("Receipts:");
		myList.add("");
		myList.add("");
		
		for(int i=0; i<taxp.getReceipts().size(); i++){
			//System.out.println(taxp.getReceipts().get(i).getReceiptCode());
			myList.add("Receipt ID: " + taxp.getReceipts().get(i).getReceiptCode());
			myList.add("Date: " + taxp.getReceipts().get(i).getDateOfIssue());
			myList.add("Kind: " + taxp.getReceipts().get(i).getCategory());
			myList.add("Amount: " + taxp.getReceipts().get(i).getAmountPaid());
			myList.add("Company: " + taxp.getReceipts().get(i).getSeller().getCompanyName());
			myList.add("Country: " + taxp.getReceipts().get(i).getSeller().getCountry());
			myList.add("City: " + taxp.getReceipts().get(i).getSeller().getCity());
			myList.add("Street: " + taxp.getReceipts().get(i).getSeller().getStreet());
			myList.add("Number: " + taxp.getReceipts().get(i).getSeller().getStreetNumber());
			myList.add("");
			myList.add("");
		}
		
		try{
			PrintWriter output = new PrintWriter(file);
			for(String myString: myList){
				//System.out.println(myString);
				output.println(myString);
			}
			output.close();
		}catch (IOException ex){
			System.out.printf("ERROR: %s\n", ex);
		}
		
	}
	
	public void creatLogTestFile(Taxpayer taxp){
		ArrayList<String> myList = new ArrayList<String>();
		String fullDomain = domain + taxp.getAfm() + "_LOG.txt";
		File file = new File(fullDomain);
		
		myList.add("Name: "  + taxp.getName());
		myList.add("AFM: " + taxp.getAfm());
		myList.add("Income: " + taxp.getIncome());
		myList.add("Basic Tax: " + taxp.getBasicTax());
		myList.add("Tax Increase: " + taxp.getTaxIncrease());
		myList.add("Total Tax: " + taxp.getTotalTax());
		myList.add("Receipts: " + taxp.getTotalReceiptsGathered());
		myList.add("Entertainment: " + taxp.getCategoryNumberOfReceipts("Entertainment"));
		myList.add("Basic: " + taxp.getCategoryNumberOfReceipts("Basic"));
		myList.add("Travel: " + taxp.getCategoryNumberOfReceipts("Travel"));
		myList.add("Health: " + taxp.getCategoryNumberOfReceipts("Health"));
		myList.add("Other:" + taxp.getCategoryNumberOfReceipts("Other"));
		
		try{
			PrintWriter output = new PrintWriter(file);
			for(String myString: myList){
				output.println(myString);
			}
			output.close();
		}catch (IOException ex){
			System.out.printf("ERROR: %s\n", ex);
		}
	}
	
	public void createPieChart(Taxpayer taxp){
		chartCreator.createPieChart(taxp);
	}
	
	public void createBarChart(Taxpayer taxp){
		chartCreator.createBarChart(taxp);
	}
	
	public void setDomain(String domain){
		this.domain = domain;
	}
}
